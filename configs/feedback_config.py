from disnake import TextInputStyle

class Config:
    _instance = None

    def __new__(cls):
        if cls._instance is None:
            cls._instance = super().__new__(cls)
            cls._instance.channels_config = None
            cls._instance.roles_config = None
        return cls._instance

    def init(self, channels_config, roles_config):
        self.channels_config = channels_config
        self.roles_config = roles_config

    @property
    def channels(self):
        if self.channels_config is None:
            raise RuntimeError("Channels config not initialized")
        return self.channels_config

    @property
    def roles(self):
        if self.roles_config is None:
            raise RuntimeError("Roles config not initialized")
        return self.roles_config


config = Config()

TICKET_COLORS = {
    "Complaint": "red",
    "Appeal": "orange",
    "Staff Application": "green"
}

TYPE_OPTIONS = [
    {"label": "Complaint", "value": "complaint", "emoji": "‚ö†Ô∏è"},
    {"label": "Appeal", "value": "appeal", "emoji": "üì©"},
    {"label": "Staff Application", "value": "staff", "emoji": "üõ†Ô∏è"}
]

PLATFORM_OPTIONS = [
    {"label": "Mindustry", "value": "mindustry", "emoji": "üß±"},
    {"label": "Discord", "value": "discord", "emoji": "üí¨"}
]

MODAL_CONFIGS = {
    "complaint": {
        "title": "Complaint",
        "inputs": [
            {"label": "Offender's username", "custom_id": "offender", "style": TextInputStyle.short, "max_length": 200},
            {"label": "Rule violation", "custom_id": "rule", "style": TextInputStyle.short, "max_length": 5},
            {"label": "Violation description", "custom_id": "desc", "style": TextInputStyle.paragraph,
             "max_length": 4000}
        ]
    },
    "appeal": {
        "title": "Appeal",
        "inputs": [
            {"label": "Punishment reason", "custom_id": "reason", "style": TextInputStyle.short, "max_length": 500},
            {"label": "Punishment date", "custom_id": "date", "style": TextInputStyle.short, "max_length": 20},
            {"label": "Description", "custom_id": "desc", "style": TextInputStyle.paragraph, "max_length": 4000},
            {"label": "Game username and server", "custom_id": "nick", "style": TextInputStyle.short,
             "condition": lambda platform: platform == "mindustry", "max_length": 300}
        ]
    },
    "staff": {
        "title": "Staff Application",
        "inputs": [
            {"label": "Desired position", "custom_id": "position", "style": TextInputStyle.short, "max_length": 100},
            {"label": "Why you want this position", "custom_id": "why", "style": TextInputStyle.paragraph,
             "max_length": 500},
            {"label": "Age", "custom_id": "age", "style": TextInputStyle.short, "max_length": 2},
            {"label": "About yourself", "custom_id": "about", "style": TextInputStyle.paragraph, "max_length": 4000},
            {"label": "Game username", "custom_id": "nick", "style": TextInputStyle.short,
             "condition": lambda platform: platform == "mindustry", "max_length": 200}
        ]
    }
}

TYPE_OPTIONS_RU = [
    {"label": "–ñ–∞–ª–æ–±–∞", "value": "complaint", "emoji": "‚ö†Ô∏è"},
    {"label": "–ê–ø–µ–ª–ª—è—Ü–∏—è", "value": "appeal", "emoji": "üì©"},
    {"label": "–ó–∞—è–≤–∫–∞ –Ω–∞ —Å—Ç–∞—Ñ—Ñ", "value": "staff", "emoji": "üõ†Ô∏è"}
]

PLATFORM_OPTIONS_RU = [
    {"label": "Mindustry", "value": "mindustry", "emoji": "üß±"},
    {"label": "Discord", "value": "discord", "emoji": "üí¨"}
]

MODAL_CONFIGS_RU = {
    "complaint": {
        "title": "–ñ–∞–ª–æ–±–∞",
        "inputs": [
            {"label": "–ù–∏–∫ –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è", "custom_id": "offender", "style": TextInputStyle.short, "max_length": 200},
            {"label": "–ü—É–Ω–∫—Ç –ø—Ä–∞–≤–∏–ª–∞", "custom_id": "rule", "style": TextInputStyle.short, "max_length": 5},
            {"label": "–û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è", "custom_id": "desc", "style": TextInputStyle.paragraph, "max_length": 4000}
        ]
    },
    "appeal": {
        "title": "–ê–ø–µ–ª–ª—è—Ü–∏—è",
        "inputs": [
            {"label": "–ü—Ä–∏—á–∏–Ω–∞ –Ω–∞–∫–∞–∑–∞–Ω–∏—è", "custom_id": "reason", "style": TextInputStyle.short, "max_length": 500},
            {"label": "–î–∞—Ç–∞ –Ω–∞–∫–∞–∑–∞–Ω–∏—è", "custom_id": "date", "style": TextInputStyle.short, "max_length": 20},
            {"label": "–û–ø–∏—Å–∞–Ω–∏–µ", "custom_id": "desc", "style": TextInputStyle.paragraph, "max_length": 4000},
            {"label": "–ò–≥—Ä–æ–≤–æ–π –Ω–∏–∫ –∏ —Å–µ—Ä–≤–µ—Ä", "custom_id": "nick", "style": TextInputStyle.short,
             "condition": lambda platform: platform == "mindustry", "max_length": 300}
        ]
    },
    "staff": {
        "title": "–ó–∞—è–≤–∫–∞ –Ω–∞ —Å—Ç–∞—Ñ—Ñ",
        "inputs": [
            {"label": "–ñ–µ–ª–∞–µ–º–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å", "custom_id": "position", "style": TextInputStyle.short, "max_length": 100},
            {"label": "–ü–æ—á–µ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å", "custom_id": "why", "style": TextInputStyle.paragraph,
             "max_length": 500},
            {"label": "–í–æ–∑—Ä–∞—Å—Ç", "custom_id": "age", "style": TextInputStyle.short, "max_length": 2},
            {"label": "–û —Å–µ–±–µ", "custom_id": "about", "style": TextInputStyle.paragraph, "max_length": 4000},
            {"label": "–ò–≥—Ä–æ–≤–æ–π –Ω–∏–∫", "custom_id": "nick", "style": TextInputStyle.short,
             "condition": lambda platform: platform == "mindustry", "max_length": 200}
        ]
    }
}

TEXTS = {
    "en": {
        "modals": {
            "confirm_close": {
                "title": "Confirm Closure",
                "label": "Confirmation",
                "placeholder": "Type 'yes' to confirm",
                "hint": "‚ùó Please type 'yes' to confirm closure",
                "success": "‚úÖ Ticket closed successfully",
                "error": "‚ùå Invalid confirmation",
                "db_error": "‚ö†Ô∏è Ticket save error",
                "delete_error": "‚ùå Channel deletion error",
                "critical_error": "‚ùå Critical error"
            },
            "embed_titles": {
                "closed_ticket": "Closed ticket: {title}",
                "type": "Type",
                "platform": "Platform",
                "opened_by": "Opened by",
                "closed_by": "Closed by"
            }
        },
        "setup": {
            "feedback": {
                "title": "Feedback System",
                "description": (
                    "**1.** Select request type: `Complaint`, `Appeal` or `Staff Application`\n"
                    "**2.** Select platform: `Mindustry` or `Discord`\n"
                    "**3.** Click `Fill Form` button\n\n"
                    "After submitting the form, a private channel will be created accessible only to you and staff."
                )
            },
            "errors": {
                "ticket_info": "‚ùå Ticket information not found",
                "metadata": "‚ùå Metadata not found in ticket",
                "invalid_metadata": "‚ùå Invalid ticket metadata",
                "opener": "‚ùå Ticket opener not found",
                "platform": "‚ùå Platform information not found"
            }
        },
        "ticket_utils": {
            "ticket_title": "{title} by {user}",
            "platform_field": "Platform",
            "success": "‚úÖ Channel created: {channel}",
            "error": "‚ùå Error creating ticket"
        },
        "views": {
            "close_ticket": "Close Ticket",
            "type_placeholder": "Select request type",
            "platform_placeholder": "Select platform",
            "submit_button": "Fill Form",
            "errors": {
                "select_both": "‚ùó Please select both type and platform first.",
                "expired": "‚ùó Your selection has expired, please start over."
            }
        }
    },
    "ru": {
        "modals": {
            "confirm_close": {
                "title": "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è",
                "label": "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ",
                "placeholder": "–í–≤–µ–¥–∏—Ç–µ '–¥–∞' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è",
                "hint": "‚ùó –í–≤–µ–¥–∏—Ç–µ '–¥–∞' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è",
                "success": "‚úÖ –¢–∏–∫–µ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç",
                "error": "‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ",
                "db_error": "‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–∏–∫–µ—Ç–∞",
                "delete_error": "‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞",
                "critical_error": "‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞"
            },
            "embed_titles": {
                "closed_ticket": "–ó–∞–∫—Ä—ã—Ç—ã–π —Ç–∏–∫–µ—Ç: {title}",
                "type": "–¢–∏–ø",
                "platform": "–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞",
                "opened_by": "–û—Ç–∫—Ä—ã—Ç",
                "closed_by": "–ó–∞–∫—Ä—ã—Ç"
            }
        },
        "setup": {
            "feedback": {
                "title": "–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å",
                "description": (
                    "**1.** –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ–±—Ä–∞—â–µ–Ω–∏—è: `–ñ–∞–ª–æ–±–∞`, `–ê–ø–µ–ª–ª—è—Ü–∏—è` –∏–ª–∏ `–ó–∞—è–≤–∫–∞ –Ω–∞ —Å—Ç–∞—Ñ—Ñ`\n"
                    "**2.** –í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É: `Mindustry` –∏–ª–∏ `Discord`\n"
                    "**3.** –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É `–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É`\n\n"
                    "–ü–æ—Å–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª, –¥–æ—Å—Ç—É–ø–Ω—ã–π —Ç–æ–ª—å–∫–æ –≤–∞–º –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏."
                )
            },
            "errors": {
                "ticket_info": "‚ùå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–∏–∫–µ—Ç–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞",
                "metadata": "‚ùå –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —Ç–∏–∫–µ—Ç–µ",
                "invalid_metadata": "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Ç–∏–∫–µ—Ç–∞",
                "opener": "‚ùå –ê–≤—Ç–æ—Ä —Ç–∏–∫–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω",
                "platform": "‚ùå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
            }
        },
        "ticket_utils": {
            "ticket_title": "{title} –æ—Ç {user}",
            "platform_field": "–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞",
            "success": "‚úÖ –ö–∞–Ω–∞–ª —Å–æ–∑–¥–∞–Ω: {channel}",
            "error": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∏–∫–µ—Ç–∞"
        },
        "views": {
            "close_ticket": "–ó–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç",
            "type_placeholder": "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ–±—Ä–∞—â–µ–Ω–∏—è",
            "platform_placeholder": "–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É",
            "submit_button": "–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É",
            "errors": {
                "select_both": "‚ùó –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É.",
                "expired": "‚ùó –í–∞—à –≤—ã–±–æ—Ä —É—Å—Ç–∞—Ä–µ–ª, –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ."
            }
        }
    }
}
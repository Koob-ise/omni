import disnake
from disnake import TextInputStyle


class Config:
    _instance = None

    def __new__(cls):
        if cls._instance is None:
            cls._instance = super().__new__(cls)
            cls._instance.channels_config = None
            cls._instance.roles_config = None
        return cls._instance

    def init(self, channels_config, roles_config):
        self.channels_config = channels_config
        self.roles_config = roles_config

    @property
    def channels(self):
        if self.channels_config is None:
            raise RuntimeError("Channels config not initialized")
        return self.channels_config

    @property
    def roles(self):
        if self.roles_config is None:
            raise RuntimeError("Roles config not initialized")
        return self.roles_config


# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
config = Config()

# English configuration
TYPE_OPTIONS = [
    {"label": "Complaint", "value": "complaint", "emoji": "‚ö†Ô∏è"},
    {"label": "Appeal", "value": "appeal", "emoji": "üì©"},
    {"label": "Staff Application", "value": "staff", "emoji": "üõ†Ô∏è"}
]

PLATFORM_OPTIONS = [
    {"label": "Mindustry", "value": "mindustry", "emoji": "üß±"},
    {"label": "Discord", "value": "discord", "emoji": "üí¨"}
]

MODAL_CONFIGS = {
    "complaint": {
        "title": "Complaint",
        "inputs": [
            {"label": "Offender's username", "custom_id": "offender", "style": TextInputStyle.short, "max_length": 200},
            {"label": "Rule violation", "custom_id": "rule", "style": TextInputStyle.short, "max_length": 5},
            {"label": "Violation description", "custom_id": "desc", "style": TextInputStyle.paragraph,
             "max_length": 4000}
        ]
    },
    "appeal": {
        "title": "Appeal",
        "inputs": [
            {"label": "Punishment reason", "custom_id": "reason", "style": TextInputStyle.short, "max_length": 500},
            {"label": "Punishment date", "custom_id": "date", "style": TextInputStyle.short, "max_length": 20},
            {"label": "Description", "custom_id": "desc", "style": TextInputStyle.paragraph, "max_length": 4000},
            {"label": "Game username and server", "custom_id": "nick", "style": TextInputStyle.short,
             "condition": lambda platform: platform == "mindustry", "max_length": 300}
        ]
    },
    "staff": {
        "title": "Staff Application",
        "inputs": [
            {"label": "Desired position", "custom_id": "position", "style": TextInputStyle.short, "max_length": 100},
            {"label": "Why you want this position", "custom_id": "why", "style": TextInputStyle.paragraph,
             "max_length": 500},
            {"label": "About yourself", "custom_id": "about", "style": TextInputStyle.paragraph, "max_length": 4000},
            {"label": "Game username", "custom_id": "nick", "style": TextInputStyle.short,
             "condition": lambda platform: platform == "mindustry", "max_length": 200}
        ]
    }
}

# Russian configuration for feedback channel
TYPE_OPTIONS_RU = [
    {"label": "–ñ–∞–ª–æ–±–∞", "value": "complaint", "emoji": "‚ö†Ô∏è"},
    {"label": "–ê–ø–µ–ª–ª—è—Ü–∏—è", "value": "appeal", "emoji": "üì©"},
    {"label": "–ó–∞—è–≤–∫–∞ –Ω–∞ —Å—Ç–∞—Ñ—Ñ", "value": "staff", "emoji": "üõ†Ô∏è"}
]

PLATFORM_OPTIONS_RU = [
    {"label": "Mindustry", "value": "mindustry", "emoji": "üß±"},
    {"label": "Discord", "value": "discord", "emoji": "üí¨"}
]

MODAL_CONFIGS_RU = {
    "complaint": {
        "title": "–ñ–∞–ª–æ–±–∞",
        "inputs": [
            {"label": "–ù–∏–∫ –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è", "custom_id": "offender", "style": TextInputStyle.short, "max_length": 200},
            {"label": "–ü—É–Ω–∫—Ç –ø—Ä–∞–≤–∏–ª–∞", "custom_id": "rule", "style": TextInputStyle.short, "max_length": 5},
            {"label": "–û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è", "custom_id": "desc", "style": TextInputStyle.paragraph, "max_length": 4000}
        ]
    },
    "appeal": {
        "title": "–ê–ø–µ–ª–ª—è—Ü–∏—è",
        "inputs": [
            {"label": "–ü—Ä–∏—á–∏–Ω–∞ –Ω–∞–∫–∞–∑–∞–Ω–∏—è", "custom_id": "reason", "style": TextInputStyle.short, "max_length": 500},
            {"label": "–î–∞—Ç–∞ –Ω–∞–∫–∞–∑–∞–Ω–∏—è", "custom_id": "date", "style": TextInputStyle.short, "max_length": 20},
            {"label": "–û–ø–∏—Å–∞–Ω–∏–µ", "custom_id": "desc", "style": TextInputStyle.paragraph, "max_length": 4000},
            {"label": "–ò–≥—Ä–æ–≤–æ–π –Ω–∏–∫ –∏ —Å–µ—Ä–≤–µ—Ä", "custom_id": "nick", "style": TextInputStyle.short,
             "condition": lambda platform: platform == "mindustry", "max_length": 300}
        ]
    },
    "staff": {
        "title": "–ó–∞—è–≤–∫–∞ –Ω–∞ —Å—Ç–∞—Ñ—Ñ",
        "inputs": [
            {"label": "–ñ–µ–ª–∞–µ–º–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å", "custom_id": "position", "style": TextInputStyle.short, "max_length": 100},
            {"label": "–ü–æ—á–µ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å", "custom_id": "why", "style": TextInputStyle.paragraph,
             "max_length": 500},
            {"label": "–û —Å–µ–±–µ", "custom_id": "about", "style": TextInputStyle.paragraph, "max_length": 4000},
            {"label": "–ò–≥—Ä–æ–≤–æ–π –Ω–∏–∫", "custom_id": "nick", "style": TextInputStyle.short,
             "condition": lambda platform: platform == "mindustry", "max_length": 200}
        ]
    }
}